openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Admin API"
  description: "Administration API for managing org units and sensors"
servers:
  - url: http://localhost:8080

paths:
  /OrgTreeEdges:
    post:
      summary: "Create org tree edge"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrgTreeEdge"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgTreeEdge"
        404:
          description: "Org tree node not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /OrgTreeNodes:
    post:
      summary: "Create org tree node"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrgTreeNode"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgTreeNode"
        500:
          description: "Can't add org tree node"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /OrgTreeNodes/{OrgTreeNode_id}:
    get:
      summary: "Read org tree node"
      parameters:
        - name: "OrgTreeNode_id"
          description: "The unique identifier of the sensor"
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/OrgTreeNode_id"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgTreeNode"
        404:
          description: "Org tree node not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /SensorTypes:
    post:
      summary: "Create new sensor type"
      requestBody:
        description: "Sensor type information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SensorType"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SensorType"
        500:
          description: "Can't add sensor type"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /Sensors:
    post:
      summary: "Create new sensor"
      requestBody:
        description: "Sensor information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sensor"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sensor"
        500:
          description: "Can't add sensor"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /Sensors/{Sensor_id}:
    parameters:
      - name: "Sensor_id"
        description: "The unique identifier of the sensor"
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Sensor_id"
    get:
      summary: "Read sensor"
      responses:
        200:
          description: "Sensor information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sensor"
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: "Redefine sensor properties"
      requestBody:
        description: "Sensor information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sensor"
      responses:
        200:
          description: "Succefully updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sensor"
        404:
          description: "Sensor not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /OrgUnits:
    post:
      summary: "Create org tree unit"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrgUnit"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgUnit"
        500:
          description: "Can't add organization unit"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /OrgUnits/{OrgUnit_id}:
    get:
      summary: "Read organization unit"
      parameters:
        - name: "OrgUnit_id"
          description: "The unique identifier of organization unit"
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/OrgUnit_id"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgUnit"
        404:
          description: "Organization unit not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    OrgTreeNode_id:
      description: "The unique identifier of an organization tree node"
      type: "integer"
      format: "int64_t"

    OrgTreeEdge:
      type: "object"
      required:
        - "id_u"
        - "id_v"
        - "parent"
      properties:
        id_u:
          $ref: "#/components/schemas/OrgTreeNode_id"
        id_v:
          $ref: "#/components/schemas/OrgTreeNode_id"
        parent:
          description: "true - u is parent of v, false - v is parent of u"
          type: "boolean"
          format: "bool"

    OrgTreeNode:
      type: "object"
      required:
        - "id"
        - "type"
        - "object-id"
      properties:
        id:
          $ref: "#/components/schemas/OrgTreeNode_id"
        type:
          description: '"Sensor" or "OrgUnit"'
          type: string
        object-id:
          description: "OrgUnit_id or Sensor_id"
          type: "integer"
          format: "int64_t"

    OrgUnit_id:
      description: "The unique identifier of an organization unit"
      type: "integer"
      format: "int64_t"

    OrgUnit:
      type: "object"
      required:
        - "id"
        - "name"
        - "type"
        - "json"
      properties:
        id:
          $ref: "#/components/schemas/OrgUnit_id"
        name:
          type: "string"
        type:
          type: "string"
        json:
          type: "string"

    Sensor_id:
      description: "The unique identifier of a sensor"
      type: "integer"
      format: "int64_t"

    SensorType_id:
      description: "The unique identifier ot a sensor type"
      type: "integer"
      format: "int64_t"

    SensorType:
      type: "object"
      required:
        - "id"
        - "freq"
        - "dim"
        - "info"
      properties:
        id:
          $ref: "#/components/schemas/SensorType_id"
        freq:
          type: "integer"
          format: "int64_t"
        dim:
          type: "integer"
          format: "int64_t"
        info:
          type: "string"

    Sensor:
      type: "object"
      required:
        - "id"
        - "type_id"
      properties:
        id:
          $ref: "#/components/schemas/Sensor_id"
        type:
          $ref: "#/components/schemas/SensorType_id"

    Error:
      type: "object"
      required:
        - "message"
      properties:
        message:
          description: "A human readable error message"
          type: "string"
